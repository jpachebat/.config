return {
  'MeanderingProgrammer/render-markdown.nvim',
  event = "BufRead",
  ft = { "markdown" },
  opts = {
    file_types = { "markdown" },
    render = {
      max_file_size = 10.0,
      debounce = 100,
      render_modes = true,
    },
    anti_conceal = {
      enabled = true,
      above = 0,
      below = 0,
    },
    heading = {
      enabled = true,
      sign = false,
      position = 'overlay',
      icons = { '# ', '## ', '### ', '#### ', '##### ', '###### ' },
      backgrounds = {
        'RenderMarkdownH1Bg',
        'RenderMarkdownH2Bg',
        'RenderMarkdownH3Bg',
        'RenderMarkdownH4Bg',
        'RenderMarkdownH5Bg',
        'RenderMarkdownH6Bg',
      },
      foregrounds = {
        'RenderMarkdownH1',
        'RenderMarkdownH2',
        'RenderMarkdownH3',
        'RenderMarkdownH4',
        'RenderMarkdownH5',
        'RenderMarkdownH6',
      },
    },
    paragraph = {
      enabled = true,
      left_margin = 0,
      min_width = 0,
    },
    code = {
      enabled = true,
      sign = false,
      style = 'normal',
      position = 'left',
      language_pad = 0,
      language_name = false,
      disable_background = { 'diff' },
      width = 'full',
      left_margin = 0,
      left_pad = 1,
      right_pad = 1,
      min_width = 0,
      border = 'none',
      above = '',
      below = '',
      highlight = 'RenderMarkdownCode',
      highlight_inline = 'RenderMarkdownCodeInline',
    },
    dash = {
      enabled = true,
      icon = '‚îÄ',
      width = 'full',
      highlight = 'RenderMarkdownDash',
    },
    bullet = {
      enabled = true,
      icons = { '‚Ä¢', '‚ó¶', '‚ñ™', '‚ñ´' },
      left_pad = 0,
      right_pad = 1,
      highlight = 'RenderMarkdownBullet',
    },
    checkbox = {
      enabled = true,
      position = 'overlay',
      unchecked = {
        icon = '‚òê ',
        highlight = 'RenderMarkdownUnchecked',
        scope_highlight = nil,
      },
      checked = {
        icon = '‚òë ',
        highlight = 'RenderMarkdownChecked',
        scope_highlight = nil,
      },
      custom = {
        todo = { raw = '[-]', rendered = '‚óê ', highlight = 'RenderMarkdownTodo' },
        progress = { raw = '[.]', rendered = '‚óî ', highlight = 'RenderMarkdownProgress' },
        closing = { raw = '[:]', rendered = '‚óï ', highlight = 'RenderMarkdownClosing' },
      },
    },
    quote = {
      enabled = true,
      icon = '‚ñã',
      repeat_linebreak = false,
      highlight = 'RenderMarkdownQuote',
    },
    pipe_table = {
      enabled = true,
      preset = 'none',
      style = 'normal',
      cell = 'padded',
      padding = 1,
      min_width = 0,
      border = {
        '‚îå', '‚î¨', '‚îê',
        '‚îú', '‚îº', '‚î§',
        '‚îî', '‚î¥', '‚îò',
        '‚îÇ', '‚îÄ',
      },
      alignment_indicator = '‚îÅ',
      head = 'RenderMarkdownTableHead',
      row = 'RenderMarkdownTableRow',
      filler = 'RenderMarkdownTableFill',
    },
    callout = {
      note = { raw = '[!NOTE]', rendered = 'Û∞ãΩ Note', highlight = 'RenderMarkdownInfo' },
      tip = { raw = '[!TIP]', rendered = 'Û∞å∂ Tip', highlight = 'RenderMarkdownSuccess' },
      important = { raw = '[!IMPORTANT]', rendered = 'Û∞Öæ Important', highlight = 'RenderMarkdownHint' },
      warning = { raw = '[!WARNING]', rendered = 'Û∞Ä™ Warning', highlight = 'RenderMarkdownWarn' },
      caution = { raw = '[!CAUTION]', rendered = 'Û∞≥¶ Caution', highlight = 'RenderMarkdownError' },
      abstract = { raw = '[!ABSTRACT]', rendered = 'Û∞®∏ Abstract', highlight = 'RenderMarkdownInfo' },
      summary = { raw = '[!SUMMARY]', rendered = 'Û∞®∏ Summary', highlight = 'RenderMarkdownInfo' },
      tldr = { raw = '[!TLDR]', rendered = 'Û∞®∏ Tldr', highlight = 'RenderMarkdownInfo' },
      info = { raw = '[!INFO]', rendered = 'Û∞ãΩ Info', highlight = 'RenderMarkdownInfo' },
      todo = { raw = '[!TODO]', rendered = 'Û∞ó° Todo', highlight = 'RenderMarkdownInfo' },
      hint = { raw = '[!HINT]', rendered = 'Û∞å∂ Hint', highlight = 'RenderMarkdownSuccess' },
      success = { raw = '[!SUCCESS]', rendered = 'Û∞Ñ¨ Success', highlight = 'RenderMarkdownSuccess' },
      check = { raw = '[!CHECK]', rendered = 'Û∞Ñ¨ Check', highlight = 'RenderMarkdownSuccess' },
      done = { raw = '[!DONE]', rendered = 'Û∞Ñ¨ Done', highlight = 'RenderMarkdownSuccess' },
      question = { raw = '[!QUESTION]', rendered = 'Û∞ò• Question', highlight = 'RenderMarkdownWarn' },
      help = { raw = '[!HELP]', rendered = 'Û∞ò• Help', highlight = 'RenderMarkdownWarn' },
      faq = { raw = '[!FAQ]', rendered = 'Û∞ò• Faq', highlight = 'RenderMarkdownWarn' },
      attention = { raw = '[!ATTENTION]', rendered = 'Û∞Ä™ Attention', highlight = 'RenderMarkdownWarn' },
      failure = { raw = '[!FAILURE]', rendered = 'Û∞Öñ Failure', highlight = 'RenderMarkdownError' },
      fail = { raw = '[!FAIL]', rendered = 'Û∞Öñ Fail', highlight = 'RenderMarkdownError' },
      missing = { raw = '[!MISSING]', rendered = 'Û∞Öñ Missing', highlight = 'RenderMarkdownError' },
      danger = { raw = '[!DANGER]', rendered = 'Û±êå Danger', highlight = 'RenderMarkdownError' },
      error = { raw = '[!ERROR]', rendered = 'Û∞Öñ Error', highlight = 'RenderMarkdownError' },
      bug = { raw = '[!BUG]', rendered = 'Û∞®∞ Bug', highlight = 'RenderMarkdownError' },
      example = { raw = '[!EXAMPLE]', rendered = 'Û∞âπ Example', highlight = 'RenderMarkdownHint' },
      quote = { raw = '[!QUOTE]', rendered = 'Û±Ü® Quote', highlight = 'RenderMarkdownQuote' },
      cite = { raw = '[!CITE]', rendered = 'Û±Ü® Cite', highlight = 'RenderMarkdownQuote' },
    },
    link = {
      enabled = true,
      image = 'üñº ',
      email = '@ ',
      hyperlink = 'üîó ',
      highlight = 'RenderMarkdownLink',
      custom = {
        web = { pattern = '^http[s]?://', icon = '‚Üí ', highlight = 'RenderMarkdownLink' },
      },
    },
    sign = {
      enabled = true,
      highlight = 'RenderMarkdownSign',
    },
    indent = {
      enabled = false,
      per_level = 2,
      skip_level = 1,
      skip_heading = false,
    },
    latex = {
      enabled = true,
      converter = 'latex2text',
      highlight = 'RenderMarkdownMath',
      top_pad = 0,
      bottom_pad = 0,
    },
    html = {
      enabled = true,
      comment = {
        -- Turn off HTML comment concealing so comments are always visible
        conceal = false,
        -- Optional: Add text/icon before comments
        text = '<!-- -->',
        highlight = 'RenderMarkdownHtmlComment',
      },
    },
    win_options = {
      conceallevel = {
        default = 2,
        rendered = 2,
      },
      concealcursor = {
        default = '',
        rendered = '',
      },
    },
    -- Log level: 'debug', 'info', 'warn', 'error', 'off'
    log_level = 'error',
  },
  config = function(_, opts)
    require('render-markdown').setup(opts)
  end,
}